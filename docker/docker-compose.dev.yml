version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: healthapp-postgres-dev
    environment:
      POSTGRES_DB: healthapp_dev
      POSTGRES_USER: healthapp_user
      POSTGRES_PASSWORD: pg_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - healthapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U healthapp_user -d healthapp_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: healthapp-redis-dev
    environment:
      REDIS_PASSWORD: redis_password
    command: redis-server --requirepass redis_password --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis_data_dev:/data
    networks:
      - healthapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # Backend API
  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.backend
      target: development
    container_name: healthapp-backend-dev
    environment:
      NODE_ENV: development
      PORT: 3005
      HOST_IP: ${HOST_IP:-localhost}
      DB_HOST_IP: postgres
      REDIS_HOST_IP: redis
    env_file:
      - ../env_files/.env.development
    ports:
      - "3005:3005"
    volumes:
      - ../src:/app/src:ro
      - ../logs:/app/logs
      - node_modules_cache:/app/node_modules
    networks:
      - healthapp-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: npm run backend:dev

volumes:
  postgres_data_dev:
    driver: local
  redis_data_dev:
    driver: local
  node_modules_cache:
    driver: local

networks:
  healthapp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16