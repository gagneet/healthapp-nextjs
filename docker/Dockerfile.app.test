# Dockerfile.app.test - Complete Next.js app for test environment
FROM node:22-alpine

# Install system dependencies
RUN apk add --no-cache \
    libc6-compat \
    postgresql-client \
    curl \
    bash

WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm ci

# Copy all source files
COPY app/ ./app/
COPY prisma/ ./prisma/
COPY lib/ ./lib/
COPY components/ ./components/
COPY types/ ./types/
COPY public/ ./public/
COPY middleware.ts ./
COPY next.config.js ./
COPY tailwind.config.js ./
COPY postcss.config.js ./
COPY tsconfig*.json ./

# Generate Prisma client
RUN npx prisma generate

# Build Next.js application
ENV NEXT_TELEMETRY_DISABLED=1
ENV NODE_ENV=development
RUN npm run build

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001

# Create necessary directories
RUN mkdir -p logs
RUN chown -R nextjs:nodejs /app

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:3000/api/health || exit 1

# Switch to non-root user
USER nextjs

# Expose port
EXPOSE 3000

# Set environment
ENV NODE_ENV=development
ENV PORT=3000

# Start command
CMD ["npm", "start"]