# docker-stack.prod.yml - Docker Swarm stack for production environment
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: healthapp_prod
      POSTGRES_USER: healthapp_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
    networks:
      - healthapp-network
    ports:
      - "5432:5432"
    secrets:
      - postgres_password
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  backend:
    image: healthapp-backend:prod
    environment:
      NODE_ENV: production
      PORT: 3005
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      POSTGRES_DB: healthapp_prod
      POSTGRES_USER: healthapp_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      CORS_ORIGIN: https://your-domain.com
    ports:
      - "3005:3005"
    networks:
      - healthapp-network
    depends_on:
      - postgres
    secrets:
      - postgres_password
      - jwt_secret
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 30s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
      placement:
        max_replicas_per_node: 2

  frontend:
    image: healthapp-frontend:prod
    environment:
      NODE_ENV: production
      PORT: 3002
      NEXT_PUBLIC_API_URL: https://api.your-domain.com
    ports:
      - "3002:3002"
    networks:
      - healthapp-network
    depends_on:
      - backend
    deploy:
      replicas: 3
      update_config:
        parallelism: 1
        delay: 30s
        order: start-first
        failure_action: rollback
      rollback_config:
        parallelism: 1
        delay: 30s
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
      placement:
        max_replicas_per_node: 2

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - healthapp-network
    depends_on:
      - frontend
      - backend
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

secrets:
  postgres_password:
    external: true
  jwt_secret:
    external: true

volumes:
  postgres_prod_data:
    driver: local

networks:
  healthapp-network:
    driver: overlay
    attachable: true