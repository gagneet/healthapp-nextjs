# Dockerfile.prod - Multi-stage production build
FROM node:22-alpine as base

# Install dependencies
RUN apk add --no-cache \
    libc6-compat \
    postgresql-client \
    curl \
    bash

WORKDIR /app

# Copy package files
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Backend production stage
FROM base as backend-prod
LABEL maintainer="HealthApp Team <ops@healthapp.com>"

# Copy backend source and build
COPY src/ ./src/
COPY tsconfig*.json ./
COPY .sequelizerc ./

# Build TypeScript
RUN npm install -g typescript
RUN npm run build

# Remove dev dependencies and source files
RUN rm -rf src/ tsconfig*.json node_modules/
RUN npm ci --only=production

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S backend -u 1001
RUN chown -R backend:nodejs /app
USER backend

# Create logs directory
RUN mkdir -p logs

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3005/api/health || exit 1

# Expose backend port
EXPOSE 3005

# Production command
CMD ["node", "dist/server.js"]

# Frontend production stage  
FROM node:22-alpine as frontend-build
WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm ci

# Copy source files
COPY app/ ./app/
COPY components/ ./components/
COPY lib/ ./lib/
COPY public/ ./public/
COPY types/ ./types/
COPY next.config.js ./
COPY tailwind.config.js ./
COPY postcss.config.js ./
COPY tsconfig.json ./

# Build Next.js application
RUN npm run build

# Frontend production runtime
FROM node:22-alpine as frontend-prod
LABEL maintainer="HealthApp Team <ops@healthapp.com>"

WORKDIR /app

# Install production dependencies only
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Copy built application
COPY --from=frontend-build /app/.next ./.next
COPY --from=frontend-build /app/public ./public
COPY --from=frontend-build /app/next.config.js ./
COPY --from=frontend-build /app/package.json ./

# Create non-root user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nextjs -u 1001
RUN chown -R nextjs:nodejs /app
USER nextjs

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=10s --retries=3 \
  CMD curl -f http://localhost:3002/api/health || exit 1

# Expose frontend port
EXPOSE 3002

# Production command
CMD ["npm", "start"]