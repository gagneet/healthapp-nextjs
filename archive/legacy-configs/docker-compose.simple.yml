version: '3.8'

services:
  postgres:
    image: postgres:17-alpine
    container_name: healthapp-postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-healthapp_prod}
      POSTGRES_USER: ${POSTGRES_USER:-healthapp_user}  
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secure_prod_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-healthapp_user} -d ${POSTGRES_DB:-healthapp_prod}"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  nextjs:
    build:
      context: .
      dockerfile: docker/Dockerfile.nextjs
      target: runner
    container_name: healthapp-nextjs
    environment:
      NODE_ENV: production
      PORT: 3000
      DATABASE_URL: "postgresql://${POSTGRES_USER:-healthapp_user}:${POSTGRES_PASSWORD:-secure_prod_password}@postgres:5432/${POSTGRES_DB:-healthapp_prod}?schema=public"
      NEXTAUTH_URL: https://${DOMAIN:-healthapp.gagneet.com}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET:-your-nextauth-secret-32-char-key}
      JWT_SECRET: ${JWT_SECRET:-your-256-bit-secret-key-change-this}
      NEXT_PUBLIC_API_URL: https://${DOMAIN:-healthapp.gagneet.com}/api
      DEBUG: "false"
      LOG_LEVEL: info
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 60s
      timeout: 30s
      retries: 3
      start_period: 120s
    restart: unless-stopped
    command: >
      sh -c "
        echo 'Starting Next.js Healthcare Application...' &&
        echo 'Running Prisma migrations...' &&
        npx prisma migrate deploy &&
        npx prisma generate &&
        echo 'Starting Next.js server...' &&
        npm start
      "

  nginx:
    image: nginx:alpine
    container_name: healthapp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - nextjs
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  default:
    name: healthapp-network