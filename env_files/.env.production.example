# ============================================================================
# HEALTHCARE APPLICATION - PRODUCTION ENVIRONMENT CONFIGURATION
# ============================================================================
# Copy this file to .env.production and fill in the actual values
# 
# CRITICAL SECURITY REQUIREMENTS:
# 1. ALL passwords and secrets MUST be cryptographically secure
# 2. NEVER commit real production credentials to version control
# 3. Use HashiCorp Vault, AWS Secrets Manager, or similar for secret management
# 4. Rotate all secrets regularly (quarterly minimum)
# 5. Enable SSL/TLS for ALL external connections
# 6. Implement proper firewall rules and network segmentation
# ============================================================================

# ============================================================================
# APPLICATION CORE SETTINGS
# Used by: src/server.js, src/routes/index.js
# ============================================================================
NODE_ENV=production                   # MUST be 'production' for security middleware activation
PORT=3001                            # Backend server port (typically behind reverse proxy)

# ============================================================================
# DATABASE CONFIGURATION (PostgreSQL) - PRODUCTION
# Used by: src/config/config.js, src/config/database-postgres.js
# ============================================================================
# CRITICAL: Use managed database service (AWS RDS, Google Cloud SQL, Azure Database)
POSTGRES_HOST=your-prod-db-host.region.rds.amazonaws.com  # Production database endpoint
POSTGRES_PORT=5432                   # Standard PostgreSQL port (or custom port for security)
POSTGRES_DB=healthapp_production     # Production database name
POSTGRES_USER=healthapp_prod_user    # Database user with minimal required permissions
POSTGRES_PASSWORD=GENERATE_VERY_STRONG_DB_PASSWORD  # CRITICAL: Use 32+ character secure password
DB_DIALECT=postgres                  # PostgreSQL for production
DB_TIMEZONE=+00:00                  # UTC timezone for global consistency

# Database Connection Pool Settings (Production Optimized)
DB_POOL_MAX=50                      # Maximum connections in pool (adjust based on load)
DB_POOL_MIN=10                      # Minimum connections in pool
DB_POOL_IDLE=30000                  # Connection idle timeout (30 seconds)
DB_POOL_ACQUIRE=60000               # Connection acquire timeout (60 seconds)

# ============================================================================
# REDIS CONFIGURATION (Session Storage & Caching) - PRODUCTION
# Used by: Session middleware, caching layer
# ============================================================================
# CRITICAL: Use managed Redis service (AWS ElastiCache, Google Memorystore)
REDIS_HOST=your-prod-redis-cluster.cache.amazonaws.com  # Production Redis endpoint
REDIS_PORT=6379                     # Standard Redis port (or custom for security)
REDIS_PASSWORD=GENERATE_VERY_STRONG_REDIS_PASSWORD      # CRITICAL: Strong Redis password
REDIS_TLS=true                      # Enable TLS for Redis connections in production

# ============================================================================
# JWT AUTHENTICATION CONFIGURATION - PRODUCTION
# Used by: src/config/jwt.js, authentication middleware
# ============================================================================
# CRITICAL: Generate cryptographically secure 256-bit secret
# Command: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=25af6001e43881f727388f44e0f6fff837510b0649fe9393987f009c595156f778442654270516863b00617b478aa46dea6311f74fb95325d3c9a344b125d033       # CRITICAL: 256-bit secret for HS256
JWT_EXPIRES_IN=1h                   # Shorter expiration for production security (1 hour)  
JWT_REFRESH_EXPIRE=7d               # Refresh token expiration
JWT_ISSUER=healthapp-production     # JWT issuer for token validation
JWT_AUDIENCE=healthapp-api          # JWT audience for token validation

# ============================================================================
# APPLICATION URLS - PRODUCTION
# Used by: CORS configuration, frontend API calls, email templates
# ============================================================================
FRONTEND_URL=https://app.yourhealthapp.com           # Production frontend URL (HTTPS only)
BACKEND_URL=https://api.yourhealthapp.com            # Production backend URL (HTTPS only)
NEXT_PUBLIC_API_URL=https://api.yourhealthapp.com    # Public API URL for frontend

# ============================================================================
# AWS S3 FILE STORAGE - PRODUCTION (REQUIRED)
# Used by: File upload services, patient document storage, medical images
# ============================================================================
# CRITICAL: Use IAM roles with minimal required permissions
AWS_ACCESS_KEY_ID=AKIA...                           # AWS IAM access key (or use IAM roles)
AWS_SECRET_ACCESS_KEY=REPLACE_WITH_AWS_SECRET        # AWS IAM secret key
AWS_REGION=us-east-1                                # AWS region for S3 buckets
AWS_S3_BUCKET=healthapp-prod-storage                # Primary storage bucket
AWS_S3_BACKUP_BUCKET=healthapp-prod-backups         # Backup storage bucket
AWS_S3_ENCRYPTION=AES256                            # Server-side encryption for S3

# ============================================================================
# GETSTREAM REAL-TIME FEATURES - PRODUCTION
# Used by: Real-time notifications, medication reminders, patient-doctor chat
# ============================================================================
GETSTREAM_API_KEY=YOUR_PRODUCTION_GETSTREAM_API_KEY  # Production GetStream API key
GETSTREAM_SECRET=YOUR_PRODUCTION_GETSTREAM_SECRET    # Production GetStream secret

# ============================================================================
# EMAIL NOTIFICATIONS - PRODUCTION (REQUIRED)
# Used by: Password reset, appointment reminders, medication alerts, system notifications
# ============================================================================
# CRITICAL: Use transactional email service (SendGrid, AWS SES, Mailgun)
SMTP_HOST=smtp.sendgrid.net          # Production SMTP server
SMTP_PORT=587                        # SMTP port (587 for STARTTLS, 465 for SSL/TLS)
SMTP_USER=apikey                     # SMTP username (often 'apikey' for SendGrid)
SMTP_PASSWORD=YOUR_SENDGRID_API_KEY  # SMTP password/API key
SMTP_FROM=noreply@yourhealthapp.com  # Verified sender email address
SMTP_SECURE=true                     # Enable TLS/SSL for SMTP

# ============================================================================
# HIPAA COMPLIANCE & SECURITY - PRODUCTION (REQUIRED)
# Used by: src/middleware/hipaaCompliance.js for PHI encryption and audit logging
# ============================================================================
# CRITICAL: Generate with: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
HIPAA_AUDIT_ENCRYPTION_KEY=REPLACE_WITH_32_BYTE_HEX_KEY     # Audit log encryption key
PHI_ENCRYPTION_KEY=REPLACE_WITH_32_BYTE_HEX_KEY             # PHI data encryption key
HIPAA_AUDIT_RETENTION_DAYS=2555     # 7 years audit retention (HIPAA requirement)

# ============================================================================
# SSL/TLS CONFIGURATION - PRODUCTION
# Used by: HTTPS server configuration, certificate management
# ============================================================================
SSL_CERT_PATH=/etc/ssl/certs/yourhealthapp.com.crt  # SSL certificate path
SSL_KEY_PATH=/etc/ssl/private/yourhealthapp.com.key # SSL private key path
SSL_CA_PATH=/etc/ssl/certs/ca-bundle.crt            # CA bundle path
FORCE_HTTPS=true                     # Force HTTPS redirects

# ============================================================================
# MONITORING & OBSERVABILITY - PRODUCTION
# Used by: Grafana dashboard, application monitoring, alerting
# ============================================================================
LOG_LEVEL=info                       # Production logging level (info/warn/error)
GRAFANA_PASSWORD=GENERATE_STRONG_GRAFANA_PASSWORD    # Grafana admin password
SENTRY_DSN=https://your-sentry-dsn   # Sentry error tracking DSN
NEW_RELIC_LICENSE_KEY=your-nr-key    # New Relic monitoring license key

# ============================================================================
# FEATURE FLAGS - PRODUCTION
# Used by: Application feature toggles, gradual rollouts
# ============================================================================
ENABLE_REGISTRATION=true             # Allow new user registration
ENABLE_EMAIL_VERIFICATION=true       # Require email verification for new accounts
ENABLE_SMS_NOTIFICATIONS=true        # Enable SMS medication reminders
ENABLE_FILE_UPLOADS=true            # Enable patient document uploads
ENABLE_PATIENT_PORTAL=true          # Enable patient self-service portal
ENABLE_TELEMEDICINE=true            # Enable video consultation features

# ============================================================================
# SECURITY HEADERS & CORS - PRODUCTION
# Used by: CORS middleware, security headers, reverse proxy configuration
# ============================================================================
CORS_ORIGIN=https://app.yourhealthapp.com           # Allowed CORS origins (frontend only)
TRUSTED_PROXIES=10.0.0.0/8,172.16.0.0/12,192.168.0.0/16  # Trusted proxy IP ranges
CONTENT_SECURITY_POLICY=default-src 'self' https:; # CSP header for XSS protection

# ============================================================================
# RATE LIMITING & DDoS PROTECTION - PRODUCTION
# Used by: Rate limiting middleware, API protection
# ============================================================================
RATE_LIMIT_WINDOW_MS=300000         # Rate limit window (5 minutes for production)
RATE_LIMIT_MAX_REQUESTS=50          # Stricter rate limiting for production
RATE_LIMIT_SKIP_TRUSTED=true        # Skip rate limiting for trusted IPs

# ============================================================================
# SESSION MANAGEMENT - PRODUCTION
# Used by: Express session middleware, user session security
# ============================================================================
# CRITICAL: Generate with: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
SESSION_SECRET=25af6001e43881f727388f44e0f6fff837510b0649fe9393987f009c595156f778442654270516863b00617b478aa46dea6311f74fb95325d3c9a344b125d033 # CRITICAL: Cryptographically secure session secret
SESSION_TIMEOUT=1800000             # Session timeout (30 minutes for security)
SESSION_SECURE=true                 # Require HTTPS for session cookies
SESSION_SAME_SITE=strict            # SameSite cookie attribute for CSRF protection

# ============================================================================
# DATABASE BACKUP & MAINTENANCE - PRODUCTION
# Used by: Automated backup scripts, database maintenance
# ============================================================================
DB_BACKUP_ENABLED=true              # Enable automated database backups
DB_BACKUP_RETENTION_DAYS=90         # Backup retention period (90 days)
DB_BACKUP_S3_BUCKET=healthapp-prod-db-backups  # S3 bucket for database backups

# ============================================================================
# COMPLIANCE & AUDIT - PRODUCTION
# Used by: Audit logging, compliance reporting, security monitoring
# ============================================================================
AUDIT_LOG_ENABLED=true              # Enable comprehensive audit logging
AUDIT_LOG_LEVEL=info                # Audit log verbosity
SECURITY_HEADERS_ENABLED=true       # Enable security headers middleware
FAILED_LOGIN_LOCKOUT=5              # Lock account after N failed login attempts
PASSWORD_POLICY_ENABLED=true        # Enforce strong password requirements

# ============================================================================
# VERSIONING & DEPLOYMENT - PRODUCTION
# Used by: Docker image tagging, deployment tracking, rollback capabilities
# ============================================================================
VERSION=1.0.0                       # Application version for deployment tracking
DEPLOYMENT_ENV=production            # Deployment environment identifier
BUILD_TIMESTAMP=REPLACE_AT_DEPLOY    # Build timestamp for deployment tracking