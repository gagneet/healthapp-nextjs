# ============================================================================
# HEALTHCARE APPLICATION - LOCAL DEVELOPMENT ENVIRONMENT CONFIGURATION
# ============================================================================
# Copy this file to .env.local and customize the values for local development
# 
# LOCAL DEVELOPMENT NOTES:
# 1. This configuration is for local development WITHOUT Docker
# 2. Use localhost hostnames instead of Docker service names
# 3. Ensure PostgreSQL and Redis are installed and running locally
# 4. Use development-safe secrets (not production values)
# ============================================================================

# ============================================================================
# APPLICATION CORE SETTINGS
# Used by: src/server.js, src/routes/index.js
# ============================================================================
NODE_ENV=development                    # Runtime environment for local development
PORT=3005                              # Backend server port
FRONTEND_URL=http://localhost:3002     # Frontend URL for CORS (Next.js configured port)

# ============================================================================
# DATABASE CONFIGURATION (PostgreSQL) - LOCAL
# Used by: src/config/config.js, src/config/database-postgres.js
# ============================================================================
# LOCAL SETUP: Install PostgreSQL locally and create database
# Commands: 
#   createdb healthapp_local
#   createuser healthapp_user -P
POSTGRES_HOST=localhost                # Local PostgreSQL host
POSTGRES_PORT=5432                     # Standard PostgreSQL port
POSTGRES_DB=healthapp_local           # Local database name
POSTGRES_USER=healthapp_user          # Local database user
POSTGRES_PASSWORD=local_dev_password   # Local database password (development only)
DB_DIALECT=postgres                   # PostgreSQL dialect
DB_TIMEZONE=+00:00                   # UTC timezone for consistency

# Database Connection Pool Settings (Local Development)
DB_POOL_MAX=5                        # Smaller pool for local development
DB_POOL_MIN=1                        # Minimum connections
DB_POOL_IDLE=10000                   # Connection idle timeout (10 seconds)

# ============================================================================
# REDIS CONFIGURATION (Session Storage & Caching) - LOCAL
# Used by: Session middleware, caching (if implemented)
# ============================================================================
# LOCAL SETUP: Install Redis locally
# Commands: 
#   brew install redis (macOS)
#   sudo apt-get install redis-server (Ubuntu)
#   redis-server (start Redis)
REDIS_HOST=localhost                  # Local Redis host
REDIS_PORT=6379                      # Standard Redis port  
REDIS_PASSWORD=                      # Empty password for local development (optional)

# ============================================================================
# JWT AUTHENTICATION CONFIGURATION - LOCAL
# Used by: src/config/jwt.js, authentication middleware
# ============================================================================
# LOCAL: Use development-safe JWT secret (NOT for production)
JWT_SECRET=25af6001e43881f727388f44e0f6fff837510b0649fe9393987f009c595156f778442654270516863b00617b478aa46dea6311f74fb95325d3c9a344b125d033  # Development JWT secret
JWT_EXPIRES_IN=24h                   # Longer expiration for development convenience
JWT_REFRESH_EXPIRE=7d                # Refresh token expiration

# ============================================================================
# API CONFIGURATION - LOCAL
# Used by: Frontend for API calls, CORS configuration
# ============================================================================
NEXT_PUBLIC_API_URL=http://localhost:3005/api  # Local API URL for frontend

# ============================================================================
# AWS S3 FILE STORAGE - LOCAL (OPTIONAL)
# Used by: File upload services (optional for local development)
# ============================================================================
# LOCAL: Comment out to disable file uploads, or use AWS dev account
# AWS_ACCESS_KEY_ID=your_dev_aws_access_key    # AWS development account access key
# AWS_SECRET_ACCESS_KEY=your_dev_aws_secret    # AWS development account secret
# AWS_REGION=us-east-1                         # AWS region
# AWS_S3_BUCKET=healthapp-local-dev-bucket     # Local development S3 bucket

# ============================================================================
# GETSTREAM REAL-TIME FEATURES - LOCAL (OPTIONAL)
# Used by: Real-time notifications, chat features (optional for local dev)
# ============================================================================
# LOCAL: Use GetStream development/free tier credentials
# GETSTREAM_API_KEY=your_dev_getstream_api_key  # GetStream development API key
# GETSTREAM_SECRET=your_dev_getstream_secret     # GetStream development secret

# ============================================================================
# EMAIL NOTIFICATIONS - LOCAL (OPTIONAL)
# Used by: Email services (optional for local development)
# ============================================================================
# LOCAL: Use fake SMTP service like MailHog or disable emails
# Option 1: MailHog (fake SMTP for local testing)
# EMAIL_HOST=localhost
# EMAIL_PORT=1025
# EMAIL_USER=
# EMAIL_PASS=
# 
# Option 2: Real SMTP for testing (Gmail with app password)
# EMAIL_HOST=smtp.gmail.com
# EMAIL_PORT=587
# EMAIL_USER=your.dev.email@gmail.com
# EMAIL_PASS=your_gmail_app_password

# ============================================================================
# HIPAA COMPLIANCE & SECURITY - LOCAL (DEVELOPMENT ONLY)
# Used by: src/middleware/hipaaCompliance.js (if testing PHI features)
# ============================================================================
# LOCAL: Use development keys (generate with crypto.randomBytes(32).toString('hex'))
# HIPAA_AUDIT_ENCRYPTION_KEY=dev_audit_key_not_for_production_32_bytes_hex
# PHI_ENCRYPTION_KEY=dev_phi_key_not_for_production_32_bytes_hex

# ============================================================================
# RATE LIMITING & SECURITY - LOCAL
# Used by: Rate limiting middleware (relaxed for development)
# ============================================================================
RATE_LIMIT_WINDOW_MS=900000          # Rate limit window (15 minutes)
RATE_LIMIT_MAX_REQUESTS=1000         # Higher limit for development testing

# ============================================================================
# SESSION MANAGEMENT - LOCAL
# Used by: Express session middleware
# ============================================================================
SESSION_SECRET=local-dev-session-secret-not-for-production  # Development session secret
SESSION_TIMEOUT=7200000              # Longer timeout for development (2 hours)

# ============================================================================
# DEVELOPMENT & DEBUGGING - LOCAL
# Used by: src/middleware/logger.js, debugging tools
# ============================================================================
DEBUG=healthapp:*                    # Enable all debug namespaces
LOG_LEVEL=debug                      # Verbose logging for development
NODE_OPTIONS=--inspect               # Enable Node.js debugger (optional)

# ============================================================================
# LOCAL DEVELOPMENT TOOLS
# Used by: Development workflow, testing, hot reloading
# ============================================================================
HOT_RELOAD=true                      # Enable hot reloading (if supported)
AUTO_MIGRATE=true                    # Auto-run migrations on startup (development only)
AUTO_SEED=false                      # Auto-run seeders (set to true if needed)
MOCK_EXTERNAL_APIS=true              # Mock external API calls for offline development

# ============================================================================
# TESTING CONFIGURATION - LOCAL
# Used by: Jest tests, integration testing
# ============================================================================
# Test database (separate from development database)
POSTGRES_DB_TEST=healthapp_test      # Test database name
TEST_TIMEOUT=30000                   # Test timeout in milliseconds
JEST_WORKER_ID=                      # Jest worker configuration

# ============================================================================
# VERSIONING & DEPLOYMENT - LOCAL
# Used by: Local version tracking
# ============================================================================
VERSION=1.0.0-local                  # Local development version
DEPLOYMENT_ENV=local                 # Local environment identifier