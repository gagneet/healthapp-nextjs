# ============================================================================
# HEALTHCARE APPLICATION - PRODUCTION ENVIRONMENT CONFIGURATION
# ============================================================================
# Copy this file to .env.production and customize the values
# 
# SECURITY WARNINGS:
# 1. Change ALL passwords and secrets before deploying to production
# 2. NEVER commit real credentials to version control
# 3. Use environment-specific values for different deployments
# 4. Generate cryptographically secure secrets for JWT and sessions
# ============================================================================

# ============================================================================
# APPLICATION CORE SETTINGS
# Used by: src/server.js, src/routes/index.js
# ============================================================================
NODE_ENV=production                    # Runtime environment (development/production/test)
PORT=3005                              # Backend server port - used in src/server.js
FRONTEND_URL=http://${HOST_IP:-localhost}:3002     # Frontend URL for CORS - parameterized IP with localhost fallback

# ============================================================================
# DATABASE CONFIGURATION (PostgreSQL)
# Used by: src/config/config.js, src/config/database-postgres.js
# ============================================================================
# These values MUST match your docker-compose.prod.yml configuration
POSTGRES_HOST=${DB_HOST_IP:-localhost}                 # Database host - parameterized IP with localhost fallback
POSTGRES_PORT=5432                     # Standard PostgreSQL port
POSTGRES_DB=healthapp_prod             # Production database name
POSTGRES_USER=healthapp_user           # Database user with full access to healthapp_prod
POSTGRES_PASSWORD=CHANGE_THIS_PRODUCTION_PASSWORD  # Database password - MUST CHANGE THIS
DB_DIALECT=postgres                   # Sequelize dialect (postgres/mysql/sqlite)
DB_TIMEZONE=+00:00                   # UTC timezone for consistent datetime handling

# Database Connection Pool Settings for Production
DB_POOL_MAX=50                        # Maximum connections in pool
DB_POOL_MIN=10                        # Minimum connections in pool

# ============================================================================
# REDIS CONFIGURATION (Session Storage & Caching)
# Used by: Application for session management and data caching
# ============================================================================
REDIS_HOST=${REDIS_HOST_IP:-localhost}                      # Redis host - parameterized IP with localhost fallback
REDIS_PORT=6379                      # Standard Redis port
REDIS_PASSWORD=CHANGE_THIS_REDIS_PRODUCTION_PASSWORD  # Redis authentication - MUST CHANGE THIS

# ============================================================================
# JWT AUTHENTICATION CONFIGURATION
# Used by: src/config/jwt.js, authentication middleware
# ============================================================================
# Generate a cryptographically secure 256-bit secret: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=CHANGE_THIS_PRODUCTION_JWT_SECRET_256_BIT_KEY_REQUIRED  # MUST be 256-bit for HS256
JWT_REFRESH_SECRET=CHANGE_THIS_PRODUCTION_REFRESH_SECRET_256_BIT_KEY  # Separate secret for refresh tokens
JWT_EXPIRES_IN=15m                   # Access token expiration (15 minutes for security)
JWT_REFRESH_EXPIRE=7d                # Refresh token expiration (7 days)

# ============================================================================
# API CONFIGURATION
# Used by: Frontend for API calls, CORS configuration
# ============================================================================
NEXT_PUBLIC_API_URL=http://${HOST_IP:-localhost}:3005  # Public API URL exposed to frontend - parameterized IP

# ============================================================================
# AWS S3 FILE STORAGE (Required for Production)
# Used by: File upload services, patient document storage
# ============================================================================
AWS_ACCESS_KEY_ID=CHANGE_THIS_AWS_ACCESS_KEY       # AWS IAM user access key
AWS_SECRET_ACCESS_KEY=CHANGE_THIS_AWS_SECRET_KEY   # AWS IAM user secret key
AWS_REGION=us-east-1                        # AWS region for S3 bucket
AWS_S3_BUCKET=healthapp-prod-bucket          # Production S3 bucket name

# ============================================================================
# GETSTREAM REAL-TIME FEATURES (Required for Production)
# Used by: Real-time notifications, medication reminders, chat features
# ============================================================================
GETSTREAM_API_KEY=CHANGE_THIS_GETSTREAM_API_KEY    # GetStream.io API key
GETSTREAM_SECRET=CHANGE_THIS_GETSTREAM_SECRET      # GetStream.io secret key

# ============================================================================
# EMAIL NOTIFICATIONS (SMTP Configuration - Required for Production)
# Used by: Email notification services, password reset, appointment reminders
# ============================================================================
EMAIL_HOST=smtp.your-production-smtp.com           # SMTP server hostname
EMAIL_PORT=587                      # SMTP port (587 for TLS, 465 for SSL)
EMAIL_USER=CHANGE_THIS_SMTP_USERNAME     # SMTP username/email
EMAIL_PASS=CHANGE_THIS_SMTP_PASSWORD        # SMTP password

# ============================================================================
# HIPAA COMPLIANCE & SECURITY (Required for Production)
# Used by: src/middleware/hipaaCompliance.js for PHI encryption
# ============================================================================
# Generate secure keys: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
HIPAA_AUDIT_ENCRYPTION_KEY=CHANGE_THIS_32_BYTE_HIPAA_AUDIT_KEY         # 32-byte key for audit log encryption
PHI_ENCRYPTION_KEY=CHANGE_THIS_32_BYTE_PHI_ENCRYPTION_KEY                 # 32-byte key for PHI data encryption
AUDIT_LOG_RETENTION_DAYS=2555        # HIPAA requirement: 6+ years retention

# ============================================================================
# STRIPE PAYMENT PROCESSING (Production Keys)
# Used by: Payment processing, subscription management
# ============================================================================
STRIPE_PUBLISHABLE_KEY=pk_live_CHANGE_THIS_STRIPE_PUBLISHABLE_KEY
STRIPE_SECRET_KEY=sk_live_CHANGE_THIS_STRIPE_SECRET_KEY
STRIPE_WEBHOOK_SECRET=whsec_CHANGE_THIS_STRIPE_WEBHOOK_SECRET

# ============================================================================
# MONITORING & OBSERVABILITY (Required for Production)
# Used by: Grafana dashboard, application monitoring
# ============================================================================
GRAFANA_PASSWORD=CHANGE_THIS_GRAFANA_ADMIN_PASSWORD           # Grafana admin password

# ============================================================================
# RATE LIMITING & SECURITY (Stricter for Production)
# Used by: src/middleware/rateLimiter.js
# ============================================================================
RATE_LIMIT_WINDOW_MS=900000          # Rate limit window in milliseconds (15 minutes)
RATE_LIMIT_MAX_REQUESTS=60           # Maximum requests per window per IP (stricter than dev)

# ============================================================================
# SESSION MANAGEMENT (Production Settings)
# Used by: Express session middleware for user sessions
# ============================================================================
# Generate secure session secret: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
SESSION_SECRET=CHANGE_THIS_PRODUCTION_SESSION_SECRET_64_BYTE_KEY  # Session signing secret
SESSION_TIMEOUT=1800000              # Session timeout in milliseconds (30 minutes for production)

# ============================================================================
# PRODUCTION LOGGING & DEBUGGING (Restricted)
# Used by: src/middleware/logger.js, production monitoring
# ============================================================================
DEBUG=                               # Disable debug logging in production
LOG_LEVEL=warn                       # Logging level (warn/error only for production)

# ============================================================================
# SSL/TLS CONFIGURATION (Production Only)
# Used by: HTTPS setup, SSL certificate management
# ============================================================================
SSL_CERT_PATH=/etc/ssl/certs/healthapp.crt
SSL_KEY_PATH=/etc/ssl/private/healthapp.key
ENABLE_HTTPS=true

# ============================================================================
# BACKUP & DISASTER RECOVERY
# Used by: Database backups, disaster recovery procedures
# ============================================================================
BACKUP_S3_BUCKET=healthapp-prod-backups
BACKUP_RETENTION_DAYS=90
ENABLE_AUTO_BACKUP=true

# ============================================================================
# VERSIONING & DEPLOYMENT
# Used by: Docker image tagging, application versioning
# ============================================================================
VERSION=1.0.0                        # Application version for Docker builds