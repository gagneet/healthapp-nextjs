# ============================================================================
# HEALTHCARE APPLICATION - NEXT.JS + PRISMA ENVIRONMENT CONFIGURATION
# ============================================================================
# Pure Next.js architecture with integrated API routes and Prisma ORM
# Copy this file to appropriate environment file (.env.local, .env.production, etc.)
#
# SECURITY WARNINGS:
# 1. Change ALL passwords and secrets before deploying to production
# 2. NEVER commit real credentials to version control
# 3. Use environment-specific values for different deployments
# 4. Generate cryptographically secure secrets for JWT and sessions
# ============================================================================

# ============================================================================
# APPLICATION CORE SETTINGS
# ============================================================================
NODE_ENV=production                     # Runtime environment (development/production/test)
PORT=3002                              # Next.js server port (integrated frontend + API)
NEXT_TELEMETRY_DISABLED=1              # Disable Next.js telemetry for healthcare privacy

# ============================================================================
# DATABASE CONFIGURATION (PostgreSQL + Prisma)
# ============================================================================
# Prisma Database URL - Primary connection string
DATABASE_URL="postgresql://healthapp_user:${POSTGRES_PASSWORD}@postgres:5432/healthapp_prod?schema=public"

# PostgreSQL Connection Details (for scripts and migrations)
POSTGRES_HOST=postgres                  # Database host (use 'postgres' for Docker, 'localhost' for local)
POSTGRES_PORT=5432                     # Standard PostgreSQL port
POSTGRES_DB=healthapp_prod             # Database name (healthapp_dev, healthapp_test, healthapp_prod)
POSTGRES_USER=healthapp_user           # Database user with full access
POSTGRES_PASSWORD=CHANGE_THIS_PASSWORD # Database password - CHANGE THIS
DB_TIMEZONE=+00:00                     # UTC timezone for consistent datetime handling

# ============================================================================
# REDIS CONFIGURATION (Session Storage & Caching)
# ============================================================================
REDIS_HOST=redis                       # Redis host (use 'redis' for Docker, 'localhost' for local)
REDIS_PORT=6379                       # Standard Redis port  
REDIS_PASSWORD=CHANGE_THIS_REDIS_PASSWORD # Redis authentication - CHANGE THIS

# ============================================================================
# JWT AUTHENTICATION CONFIGURATION
# ============================================================================
# Generate a cryptographically secure 256-bit secret: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
JWT_SECRET=CHANGE_THIS_256_BIT_SECRET                    # MUST be 256-bit for HS256
JWT_REFRESH_SECRET=CHANGE_THIS_256_BIT_REFRESH_SECRET    # Separate secret for refresh tokens
JWT_EXPIRES_IN=15m                     # Access token expiration (15 minutes for security)
JWT_REFRESH_EXPIRE=7d                  # Refresh token expiration (7 days)

# ============================================================================
# APPLICATION URLs (Next.js Pure Architecture)
# ============================================================================
# Frontend and API are served from the same Next.js server
FRONTEND_URL=https://your-domain.com    # Public URL for the healthcare application
NEXT_PUBLIC_API_URL=https://your-domain.com/api # Public API URL for client-side requests

# ============================================================================
# AWS S3 FILE STORAGE (Optional - for file uploads)
# ============================================================================
# Required for: Patient documents, medical images, prescription uploads
AWS_ACCESS_KEY_ID=your_aws_access_key       # AWS IAM user access key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key   # AWS IAM user secret key  
AWS_REGION=us-east-1                        # AWS region for S3 bucket
AWS_S3_BUCKET=healthapp-prod-bucket         # Production S3 bucket name

# ============================================================================
# EMAIL NOTIFICATIONS (SMTP Configuration)
# ============================================================================
# Required for: Password reset, appointment reminders, medication alerts
EMAIL_HOST=smtp.gmail.com               # SMTP server hostname
EMAIL_PORT=587                          # SMTP port (587 for TLS, 465 for SSL)
EMAIL_USER=your_email@gmail.com         # SMTP username/email
EMAIL_PASS=your_app_password            # SMTP password (use app password for Gmail)

# ============================================================================
# HIPAA COMPLIANCE & SECURITY
# ============================================================================
# Generate secure keys: node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"
HIPAA_AUDIT_ENCRYPTION_KEY=CHANGE_THIS_32_BYTE_KEY    # 32-byte key for audit log encryption
PHI_ENCRYPTION_KEY=CHANGE_THIS_32_BYTE_KEY           # 32-byte key for PHI data encryption

# ============================================================================
# RATE LIMITING & SECURITY
# ============================================================================
RATE_LIMIT_WINDOW_MS=900000            # Rate limit window in milliseconds (15 minutes)
RATE_LIMIT_MAX_REQUESTS=100            # Maximum requests per window per IP

# ============================================================================
# SESSION MANAGEMENT
# ============================================================================
# Generate secure session secret: node -e "console.log(require('crypto').randomBytes(64).toString('hex'))"
SESSION_SECRET=CHANGE_THIS_64_BYTE_SESSION_SECRET    # Session signing secret - CHANGE THIS
SESSION_TIMEOUT=3600000                # Session timeout in milliseconds (1 hour)

# ============================================================================
# DEVELOPMENT & DEBUGGING
# ============================================================================
DEBUG=healthapp:*                      # Debug namespace for development logging
LOG_LEVEL=info                         # Logging level (debug/info/warn/error)

# ============================================================================
# DOCKER & DEPLOYMENT SETTINGS
# ============================================================================
HOST_IP=localhost                      # Host IP for Docker networking
VERSION=4.0.0-nextjs-prisma          # Application version for Docker builds

# ============================================================================
# FEATURE FLAGS
# ============================================================================
ENABLE_REGISTRATION=true               # Enable user registration
ENABLE_2FA=false                      # Enable two-factor authentication
MAINTENANCE_MODE=false                # Enable maintenance mode